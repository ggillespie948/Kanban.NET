@model IssueTracker.Models.ProjectTask

@using (Html.BeginForm("Create", "ProjectTasks", FormMethod.Post, new { id = "projectTaskModalForm" })) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    
    <h3>New Project Task</h3>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Hidden("CreatorId", @ViewData["CreatorId"])
    </div>

    <div class="form-group">
        @Html.Hidden("ProjectID", @ViewData["ProjectId"])
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, rows = "3", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Complexity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" data-val-required="The Complexity field is required." id="Complexity" name="Complexity" type="number" value="0">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="5">5</option>
                <option value="8">8</option>
                <option value="13">13</option>
                <option value="20">20</option>
                <option value="40">40</option>
                <option value="0">Unknown</option>
            </select>
            @Html.ValidationMessageFor(model => model.Complexity, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Members, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control col-md-2" name="Members" id="Members">
                <option value="None"> Unassigned </option>
                @foreach (IssueTracker.Models.UserAccount user in ViewData["ProjectMembers"] as IEnumerable<IssueTracker.Models.UserAccount>)
                {
                    <option value="@user.Id">
                        @user.Name
                    </option>
                }
            </select>
        </div>
    </div>

    <div id="loaderDiv" style="display:none;">

        Posting....
    </div>

</div>
}


